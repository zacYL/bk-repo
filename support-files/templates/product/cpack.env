# 安装路径
INSTALL_PATH=/data/cpack

# CPACK域名
CPACK_DOMAIN=canway.com

# 环境中已经存在的
CPACK_CONSUL_TAG=cpack
CPACK_CONSUL_PORT=8500

# profile
CPACK_PROFILES_ACTIVE=test

# mongo
CPACK_MONGODB_USER=cpack_admin
CPACK_MONGODB_PASSWORD=fe676326-5852-48ff-8258-9db68d834e66
CPACK_MONGODB_ADDR=192.168.104.161:27017,192.168.104.162:27017,192.168.104.163:27017
CPACK_MONGODB_DB_NAME=cpack
MONGODB_RES=1

# redis
CPACK_REDIS_HOST=127.0.0.1
CPACK_REDIS_PORT=6379
CPACK_REDIS_PASSWORD=xxxx

# log
BK_REPO_LOGS_DIR=/data/cpack/logs/repo

# filesystem storage
CPACK_FILE_PATH_COMMON=/data/cpack/filesystem

# service name prefix
CPACK_SERVICE_PREFIX=repo-
CPACK_SERVICE_SUFFIX=

# service
BK_REPO_HOST=cpack.${CPACK_DOMAIN}
BK_REPO_CENTER_HOST=cpack.${CPACK_DOMAIN}

#repository
BK_REPO_REPOSITORY_PORT=25901

#auth
BK_REPO_AUTH_PORT=25902

#generic
BK_REPO_GENERIC_PORT=25903

#helm
BK_REPO_HELM_PORT=25904

#maven
BK_REPO_MAVEN_PORT=25905

#rpm
BK_REPO_RPM_PORT=25906

#pypi
BK_REPO_PYPI_PORT=25907

#composer
BK_REPO_COMPOSER_PORT=25908

#opdata
BK_REPO_OPDATA_PORT=25909

#replication
BK_REPO_REPLICATION_PORT=25910

#nuget
BK_REPO_NUGET_PORT=25911

# docker
# BK_REPO_DOCKER_PORT=25912
BK_REPO_DOCKER_HOST=docker.${BK_REPO_HOST}
BK_REPO_DOCKER_HTTP_PORT=80
BK_REPO_DOCKER_HTTPS_PORT=443

# oci
BK_REPO_OCI_PORT=25912

# npm
BK_REPO_NPM_PORT=25913
BK_REPO_NPM_MIGRATION_REMOTE_URL=https://registry.npm.taobao.org
BK_REPO_NPM_MIGRATION_DATA_URL=http://localhost

#analyst
BK_REPO_ANALYST_PORT=25914

BK_REPO_ANALYSISEXECUTOR_PORT=25915

BK_REPO_JOB_PORT=25916

# frontend
BK_HTTP_SCHEMA=http
BK_PAAS_FQDN=${BK_REPO_HOST}
BK_CI_FQDN=devops.${CPACK_DOMAIN}
# 如果是独立部署模式，上没的二个变量都不用渲染
BK_REPO_DEPLOY_MODE=standalone

# ci 模式部署
BK_REPO_DEPLOY_MODE=standalone

# gateway
BK_REPO_HOST=${BK_REPO_HOST}
BK_REPO_AUTHORIZATION="Platform MThiNjFjOWMtOTAxYi00ZWEzLTg5YzMtMWY3NGJlOTQ0YjY2OlVzOFpHRFhQcWs4NmN3TXVrWUFCUXFDWkxBa00zSw=="
BK_REPO_HTTP_PORT=80
BK_REPO_HTTPS_PORT=443
BK_REPO_FQDN=${BK_REPO_HOST}
BK_REPO_SERVICE_PREFIX=repo-
BK_REPO_GATEWAY_CORS_ALLOW_LIST=
BK_REPO_NGINX_LOGS_DIR=/data/cpack/logs
BK_REPO_HOME=/data/cpack/repo

# consul 相关配置
BK_REPO_CONSUL_DNS_HOST=127.0.0.1
BK_REPO_CONSUL_DNS_PORT=8600
BK_REPO_CONSUL_SERVER_HOST=127.0.0.1
BK_REPO_CONSUL_SERVER_PORT=8500
BK_REPO_CONSUL_DOMAIN=consul
BK_REPO_CONSUL_TAG=cpack

# cluster
CPACK_CLUSTER_SELF_NAME=edge
CPACK_CLUSTER_SELF_DOMAIN=${BK_REPO_HOST}
CPACK_CLUSTER_SELF_USERNAME=admin
CPACK_CLUSTER_SELF_PASSWORD=bkrepo
CPACK_ROLE_TYPE=CENTER
CPACK_CLUSTER_CENTER_NAME=center
CPACK_CLUSTER_CENTER_DOMAIN=${BK_REPO_CENTER_HOST}
CPACK_CLUSTER_CENTER_USERNAME=admin
CPACK_CLUSTER_CENTER_PASSWORD=bkrepo

#streams
CPACK_STREAM_FILE_DEFAULT_PATH=/data/cpack/streams

# license
CW_LICENSE_PORT=29000
BKCI_CONSUL_TAG=devops


# analysis-executor
BK_REPO_ANALYSIS_EXECUTOR_AT_LEAST_FREE_MEM_PERCENT=0.2
BK_REPO_ANALYSIS_EXECUTOR_AT_LEAST_USABLE_DISK_SPACE_PERCENT=0.3
BK_REPO_ANALYSIS_EXECUTOR_DOCKER_ENABLED=true
BK_REPO_ANALYSIS_EXECUTOR_DOCKER_HOST=unix://var/run/docker.sock
BK_REPO_ANALYSIS_EXECUTOR_DOCKER_VERSION=1.23
# timeout=60分钟
BK_REPO_ANALYSIS_EXECUTOR_DOCKER_CONNECT_TIMEOUT=3600000
BK_REPO_ANALYSIS_EXECUTOR_DOCKER_READ_TIMEOUT=3600000

BK_REPO_REPOSITORY_CLEAN_STRATEGY_TIME=0\ 0\ 2\ \*\ \*\ \?

# pulsar
PULSAR_SERVICE_URL=pulsar://10.10.24.24
PULSAR_SERVICE_PORT=6650
PULSAR_AUTH_JWT_TOKEN=
PULSAR_TENANT=cpack
PULSAR_NAMESPACE=bkrepo

# 扫描读取k8s信息
BK_REPO_API_SERVER=
BK_REPO_TOKEN=

# 扫描分发器
# 默认分发器:docker、k8s，与下面的启用对应
DEFAULT_DISPATCHER="k8s"
# 启用docker分发器:true/false
DISPATCHER_DOCKER_ENABLED=false
# docker分发器携带的认证参数,访问的目标仓库为公开仓库时不需要以下2个参数,或参数值可以为空
SCANNER_USERNAME=admin
SCANNER_PASSWORD=bkrepo
# 启用k8s分发器:true/false
DISPATCHER_K8S_ENABLED=true